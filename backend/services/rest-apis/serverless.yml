org: informatik
app: umfragetool
service: rest-api-umfrage
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: python3.9
  stage: dev
  region: eu-central-1
  environment:
    # Environment variables scripts can use with os.environ[]
    DATABASE_URL: ${env:DATABASE_URL} # Only used for local development defined in .env file
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource: arn:aws:secretsmanager:us-east-1:123456789012:secret:prod/rds/db-credentials-abc123 # EXAMPLE REPLACE WITH ACTUAL VALUE

functions:
  createDatabase:
    handler: db_handler.createDatabase
    events:
      - httpApi:
          method: POST
          path: /database/create

  addExampleData:
    handler: db_handler.addExampleData
    events:
      - httpApi:
          method: POST
          path: /database/addExampleData

  # Umfragen Functions
  deleteUmfrageById:
    handler: umfrage_handler.deleteUmfrageById
    events:
      - httpApi:
          path: /umfrage/delete/{id}
          method: delete
  createSession:
    handler: umfrage_handler.createSession
    events:
      - httpApi:
          path: /session/{id}
          method: post
  uploadUmfrage:
    handler: umfrage_handler.uploadUmfrage
    events:
      - httpApi:
          path: /umfrage/upload
          method: post
  getAllUmfragen:
    handler: umfrage_handler.getAllUmfragen
    events:
      - httpApi:
          path: /umfrage/getAll
          method: get

  # Auth Functions
  functions:
  register:
    handler: auth_handler.register
    events:
      - http:
          path: /register
          method: post

  login:
    handler: auth_handler.login
    events:
      - http:
          path: /login
          method: post

  
plugins:
  - serverless-python-requirements # Plugin to handle python requirements
  - serverless-dotenv-plugin # Plugin to load environment variables from .env file
  - serverless-offline # Plugin to run serverless offline

custom:
  pythonRequirements:
    dockerizePip: true